import torch
from torch import nn
from config import decode_func

print(decode_func([    0,   198,   198,    43,  1921,   569,  7156,  1921,    11,   327,
         23518,    11,  7946, 35455,   784,   383, 31252,  1839,   257, 14167,
          5454,  3670,   319,  3909,    11,   290,   287,   257,  1592,   625,
           262,  1526,   272, 11109,    11,   262, 25953,  3414,   257, 10758,
          1445,   284,   751,  9298,  2651, 18825,  2547,   786,   284,   262,
          9354,    13,   198,   198, 24860,   422,   477,  3466,   287,   262,
          9481,    11,  1390,   262, 35297, 17375,   287,  4842,    11,   481,
           307,  8867,   329,   257,  3047,  1413,  3187,   422,   262,  9481,
         49716, 29176,   287,  2901,    13,   198,   198,   818,  7522,   286,
           262, 27622,   447,   247,  1592,   287,  4842,    11,  9481, 29663,
           389,   635,  5410,   281, 15162,  1413,   287, 10930,    13,   383,
          1413,   318,  1280,   284,   262,  1171,   290,   481,  1011,  1295,
          1141,   262,  9481,  2107,  3992,  2701,   379,   718,  2390, 12152,
            14,  2257,    43,   357,    24,    25,  1270,  3001, 12152,    14,
          2257,    43,   737,   198,   198,   447,   250,   464, 31252,   481,
           307,   845,  3772,   290,  6568,   326, 18825,  2547,   786,   318,
          9679,   262,  3430,    11,   447,   251,  9481,  4537,  3611,  9142,
         14488,  4564,   531,    13,   198,   198,   447,   250,  2990,   447,
           247,   260,   257,  1256,   588,   514,    13,  1119,   447,   247,
           260,   845, 19695,   290,   484,  8212,   588,   484,   389,    13,
           775,   447,   247,   260,   845,  1280,   546,   340,   290,   356,
           481,  2051,   606,    13,   447,   251,   198,   198,   464, 31252,
           481,  1986,   257,  2583,   286,  7691,   287,  4842,    13,   383,
          9481,  4538,   481,   307,  2714,   319,  2556,    13,  1467,   379,
           262,  9481, 13614,  3337,   287, 13754,  6233,  2254,    11,  3340,
            13,   198,   198,   447,   250,  1135,   447,   247,   260,  2406,
          1969,   284,   257, 13119,  5585,   393,   262, 14167,  5454,    11,
           447,   251,  4564,   531,    13,   564,   250,  1135,   460,  2107,
           351,   262,  9481,   319,  2901,   352,    13,   447,   251,   198,
           198,   464, 31252,   481,   307,   564,   250, 11085,    12,   744,
          4538, 11103,    11,   717,    12,   744, 11103,   290,   717,    12,
           744, 11103,   508,   356,   423,  1464,  1900,    11,   290,   356,
           389,  6563,   484,   481,   307,  7147,   287,   326,   640,  5739,
            11,   351,   262,  9481,  4538,  2402,   514,   287,   355,   867,
          1830,   355,  1744,    13,   447,   251,   198,   198,   464,  1074,
         11453,   262,  8533, 10271,  4771, 12217,  1074,    13,   198,   198,
          3581, 14039,    25,   198,   198,    43,  1921,   569,  7156,  1921,
            11,   327, 23518,    11,  7946, 35455,   784,   632,   447,   247,
            82,  1327,   284,  1975,   326, 31100,   481,   423,   262,  9481,
           447,   247,    82,   717,    12,   744,  2298, 10799, 28132,   257,
          1227,   656,   465, 12302,  1622,    11,   475,   262,  2808,    12,
          1941,    12,   727, 28132,   468,  1541,   550,   262,  1611,   286,
         31661,   614,   326,   561,   787,   683,   257,  1388, 31712,   286,
           262,  9481,  9354,    13, 28132,   318,   319,  8761,   284,  2221,
           465, 44953,  3451,   287, 13130,    11,   290,   318,  1541, 10629,
           329,   257,  6016,  2003,   287, 14939,    13,   198,   198,   447,
           250,    40,   447,   247,    76,   655,  6568,   284,   651,   284,
           766,   703,   339, 20067,   284,   465,  6227,   284,   711,   329,
           262, 27622,    11,   447,   251, 10937,  9142,  3271,  7695,   346,
         11203,   260,   531,    13,   564,   250,    40,   804,  2651,   284,
          4379])
)
# class Net(nn.Module):
#     def __init__(self) -> None:
#         super().__init__()
#         self.layer_1 = nn.Linear(3, 10)
#         self.layer_2 = nn.Linear(10, 10)
#         self.layer_3 = nn.Linear(10, 10)
#         self.layer_4 = nn.Linear(10, 10)
#         self.layer_5 = nn.Linear(10, 1)

# def main(rank: int):
#     torch.manual_seed(1353 + rank*8)
#     x = torch.rand(3,3)
#     if rank == 0:
#         print(x)

# if __name__ == '__main__':
#     torch.multiprocessing.spawn(main, nprocs=3)